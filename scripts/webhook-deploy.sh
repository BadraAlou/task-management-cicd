#!/bin/bash

# Webhook pour d√©clenchement automatique du d√©ploiement
# Ce script peut √™tre appel√© par GitHub Actions ou un webhook externe

set -e

echo "üîî Webhook de d√©ploiement d√©clench√© √† $(date)"

# Variables d'environnement
NAMESPACE=${NAMESPACE:-"tastmanagement"}
DEPLOYMENT=${DEPLOYMENT:-"tastmanagement-app"}
TIMEOUT=${TIMEOUT:-"300s"}

# Fonction de logging
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# V√©rifications pr√©liminaires
log "üîç V√©rification des pr√©requis..."

if ! command -v kubectl &> /dev/null; then
    log "‚ùå kubectl n'est pas disponible"
    exit 1
fi

if ! kubectl cluster-info &> /dev/null; then
    log "‚ùå Cluster Kubernetes inaccessible"
    exit 1
fi

# V√©rifier l'existence du d√©ploiement
if ! kubectl get deployment/$DEPLOYMENT -n $NAMESPACE &> /dev/null; then
    log "‚ùå D√©ploiement $DEPLOYMENT introuvable dans le namespace $NAMESPACE"
    exit 1
fi

log "‚úÖ Pr√©requis valid√©s"

# Obtenir l'√©tat actuel
CURRENT_REPLICAS=$(kubectl get deployment/$DEPLOYMENT -n $NAMESPACE -o jsonpath='{.status.replicas}')
log "üìä R√©plicas actuelles: $CURRENT_REPLICAS"

# Forcer le red√©ploiement
log "üöÄ D√©clenchement du rollout restart..."
kubectl rollout restart deployment/$DEPLOYMENT -n $NAMESPACE

# Attendre la fin du d√©ploiement
log "‚è≥ Attente de la fin du rollout (timeout: $TIMEOUT)..."
if kubectl rollout status deployment/$DEPLOYMENT -n $NAMESPACE --timeout=$TIMEOUT; then
    log "‚úÖ Rollout termin√© avec succ√®s"
else
    log "‚ùå Timeout du rollout - v√©rification manuelle requise"
    exit 1
fi

# V√©rification post-d√©ploiement
log "üîç V√©rification post-d√©ploiement..."
READY_REPLICAS=$(kubectl get deployment/$DEPLOYMENT -n $NAMESPACE -o jsonpath='{.status.readyReplicas}')
UPDATED_REPLICAS=$(kubectl get deployment/$DEPLOYMENT -n $NAMESPACE -o jsonpath='{.status.updatedReplicas}')

log "üìä √âtat final:"
log "  - R√©plicas pr√™tes: $READY_REPLICAS/$CURRENT_REPLICAS"
log "  - R√©plicas mises √† jour: $UPDATED_REPLICAS/$CURRENT_REPLICAS"

if [[ "$READY_REPLICAS" == "$CURRENT_REPLICAS" ]] && [[ "$UPDATED_REPLICAS" == "$CURRENT_REPLICAS" ]]; then
    log "‚úÖ D√©ploiement r√©ussi - Toutes les r√©plicas sont pr√™tes et √† jour"
    
    # Afficher les pods mis √† jour
    log "üéØ Pods actifs:"
    kubectl get pods -n $NAMESPACE -l app=tastmanagement-app --no-headers | while read line; do
        log "  - $line"
    done
    
    log "üåü D√©ploiement automatique termin√© avec succ√®s!"
    exit 0
else
    log "‚ö†Ô∏è  D√©ploiement partiellement r√©ussi - V√©rification manuelle recommand√©e"
    exit 1
fi
